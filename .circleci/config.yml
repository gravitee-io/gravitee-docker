# Machine executor, set the machine key to true in .circleci/config.yml:
version: 2.1

parameters:
  gio_action:
    type: enum
    enum: [release, pull_requests]
    default: pull_requests
  dry_run:
    type: boolean
    default: true
    description: "Run in dry run mode?"
orbs:
  slack: circleci/slack@4.2.1
  gravitee: gravitee-io/gravitee@1.0
  secrethub: secrethub/cli@1.1.0

jobs:
  secrets_resolution:
    executor:
      name: gravitee/cicd_container_executor
      gun_image_org: 'cimg'
      gun_image_name: 'base'
      gun_image_tag: 'stable'
    resource_class: medium
    # working_directory: /mnt/ramdisk
    environment:
      DOCKERHUB_USER_NAME: 'secrethub://graviteeio/cicd/graviteebot/infra/dockerhub-user-name'
      DOCKERHUB_USER_TOKEN: 'secrethub://graviteeio/cicd/graviteebot/infra/dockerhub-user-token'
      CIRCLECI_ADMIN_TOKEN: 'secrethub://graviteeio/cicd/admin/circleci/nicolas/token'
    steps:
      - secrethub/exec:
          command: |
                    mkdir -p /tmp/gravit33bot/.secrets/dockerhub/
                    echo $DOCKERHUB_USER_NAME > /tmp/gravit33bot/.secrets/dockerhub/user_name
                    echo $DOCKERHUB_USER_TOKEN > /tmp/gravit33bot/.secrets/dockerhub/user_token
                    mkdir -p /tmp/gravit33bot/.secrets/circleci/
                    echo $CIRCLECI_ADMIN_TOKEN > /tmp/gravit33bot/.secrets/circleci/admin_token

      - persist_to_workspace:
          root: /tmp
          paths:
            - gravit33bot

  cicd_container_lib_release:
    executor:
      name: gravitee/cicd_container_executor
      gun_image_org: 'cimg'
      gun_image_name: 'base'
      gun_image_tag: 'stable'
    resource_class: medium
    # working_directory: /mnt/ramdisk
    environment:
      MAVEN_VERSION: 3.6.3
      # OPENJDK_VERSION: 11.0.3
      OPENJDK_VERSION: 11
      OCI_REPOSITORY_ORG: "docker.io/graviteeio"
      OCI_REPOSITORY_NAME: "cicd-maven"
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: "Check Environment"
          command: |
                    echo "# ----------------------------------------------------------------- #"
                    echo "    MAVEN_VERSION=[${MAVEN_VERSION}]"
                    echo "    OPENJDK_VERSION=[${OPENJDK_VERSION}]"
                    echo "    OCI_REPOSITORY_ORG=[${OCI_REPOSITORY_ORG}]"
                    echo "    OCI_REPOSITORY_NAME=[${OCI_REPOSITORY_NAME}]"
                    echo "# ----------------------------------------------------------------- #"
      - run:
          name: "Check Secrets"
          command: |
                    ls -allh /tmp/gravit33bot/.secrets/dockerhub/user_name
                    ls -allh /tmp/gravit33bot/.secrets/dockerhub/user_token
      - setup_remote_docker
      - run:
          name: "Testing local docker installation"
          command: docker version
      - run: # print the name of the branch we're on
          name: "Container CI CD library : Docker build"
          command: |
                    pwd
                    ls -allh
                    echo "MAVEN_VERSION={MAVEN_VERSION}"
                    echo "OPENJDK_VERSION={OPENJDK_VERSION}"
                    echo "OCI_REPOSITORY_ORG={OCI_REPOSITORY_ORG}"
                    echo "OCI_REPOSITORY_NAME={OCI_REPOSITORY_NAME}"
                    cd cicd-lib/circleci/orbs/
                    ./build.sh
      - run: # print the name of the branch we're on
          name: "Container CI CD library : Testing the Docker images before pushing them"
          command: |
                    pwd
                    ls -allh
                    echo "MAVEN_VERSION={MAVEN_VERSION}"
                    echo "OPENJDK_VERSION={OPENJDK_VERSION}"
                    echo "OCI_REPOSITORY_ORG={OCI_REPOSITORY_ORG}"
                    echo "OCI_REPOSITORY_NAME={OCI_REPOSITORY_NAME}"
                    cd cicd-lib/circleci/orbs/
                    ./test.sh
      - run: # print the name of the branch we're on
          name: "Docker login"
          command: |
                    export DOCKERHUB_BOT_USER_NAME=$(cat /tmp/gravit33bot/.secrets/dockerhub/user_name)
                    export DOCKERHUB_BOT_USER_TOKEN=$(cat /tmp/gravit33bot/.secrets/dockerhub/user_token)
                    echo "# ------------------------------------------------------------ #"
                    echo "     DOCKERHUB_BOT_USER_NAME=[${DOCKERHUB_BOT_USER_NAME}]"
                    echo "# ------------------------------------------------------------ #"
                    echo "${DOCKERHUB_BOT_USER_TOKEN}" | docker login --username="${DOCKERHUB_BOT_USER_NAME}" --password-stdin
      - run: # print the name of the branch we're on
          name: "Container CI CD library : Docker push"
          command: |
                    pwd
                    ls -allh
                    echo "MAVEN_VERSION={MAVEN_VERSION}"
                    echo "OPENJDK_VERSION={OPENJDK_VERSION}"
                    echo "OCI_REPOSITORY_ORG={OCI_REPOSITORY_ORG}"
                    echo "OCI_REPOSITORY_NAME={OCI_REPOSITORY_NAME}"
                    docker images
                    cd cicd-lib/circleci/orbs/
                    ./publish.sh

workflows:
  version: 2.1
  cicd_container_lib_release:
    jobs:
      - secrets_resolution:
          context: cicd-orchestrator
      # - cicd_container_lib_publish_approval:
          # type: approval
      - cicd_container_lib_release:
          requires:
            - secrets_resolution
            # - cicd_container_lib_publish_approval
          context: cicd-orchestrator
          # filters:
            # branches:
              # ignore:
                # - master
                # - ci2
                # - /^feature\/.*/
                # - /^support\/.*/
                # - /^bugfix\/.*/
                # - /^hotfix\/.*/
                # - /^release\/.*/
            # tags:
              # only:
                # - /^[0-9]+.[0-9]+.[0-9]+/
                # - /^[0-9]+.[0-9]+.[0-9]+-alpha/
                # - /^[0-9]+.[0-9]+.[0-9]+-beta/
